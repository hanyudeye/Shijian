wireshark抓包工具  监听网络
凡是经过电脑的所有数据都可以得到

ARP 根据ip地址找到mac地址

tftpd32 共享服务器
Directory 给客户端下载的路径地址

#####
什么叫下载？
如何完成下载？
  1.传建一个空文件
  2.向里面写数据
  3.关闭
什么叫上传？

TFTP 简单文件传输协议 服务器发送数据的时候随机端口，所以回复确认信息发到随机端口里面
没发送一次文件时，每次都会回复，以确保没有丢包
读写请求   操作码 文件名 0 模式 0
数据包    操作码（确定是上传还是下载） 块编码（包序号） 数据（每次发送的时候，会把文件中的512字节）  如果收到数据是要回复的
ACK     操作码（4） 块编号  回复信息
ERROR  操作码（5） 差错码 差错信息 0  （请求文件不存在）

为了标记数据已经发送结束，所以规定当客户端接受数据小于516（2个字节操作码+2个字节的序号+512字节数据）时，就以为着服务器发送完毕了。

大端和小端
先存高位还是先存低位的问题   服务器一般是大端，个人电脑一般是小端，但是信息发送一般先转成大端来处理，否则信息传输就出现混乱了。
低位数据存在低地址上，高维数据存到高地址上，叫小端
低地址存高位数据，叫大端

！H ！表示从网上抓取的诗句，H表示占两个字节表示一个数据
import struct
# 给客户端发送请求
sendData = struct.pack('!H8sb5sb',1,'test.jpg',0,'octet',0)
'!H8sb5sb' !H表示1，'test.jpg'刚好8位字符串，b表示0,5s表示octet5个字符串，0表示b
# 给服务器回应，把从网上抓取下来的数据进行解析
result = struct.unpack('!HH',recVData[:4])






