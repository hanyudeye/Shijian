## 网络：规范数据的共享

## Tcp/Ip 协议族
链路层-网络层-传输层-应用层

## 端口
为什么不用pid？  因为pid是在一台主机上的，同样一个pid在不同主机上的标记是不同的
端口：用来标记进程的通道，用来区分进程
端口号：端口通过端口号来标记，只有整数，范围是0到65535
知名端口号 众所周知的端口号  0到1023  80端口分配给HTTP服务 21端口分配给FTP服务
动态端口号   1023到65535  不固定分配服务，动态分配

## IP地址 用来在逻辑上标记一台电脑
ip地址的分类   A B C D(多播，多点广播，视频会议) E
Ipv4一共只有4G，还要ipv6(学校之间用的多)
公有ip   私有ip
公有ip可以在全球访问，但是私有ip只能在局域网中使用
127.0.0.0 测试回路

## socket套接字 是进程通信的一种
tcp通信
s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
udp通信
s = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
数据通信
ip区别电脑  端口确定进程  确定协议(udp,tcp)
实现网络通信，助手调试助手作为作为工具，在linux中写一个socket程序然后运行即可在实现linux中和windows之间通信，linux通过ip地址找主机，通过端口号找进程，然后就可以实现通信

具体应用在应用层有自己的通信协议
你要实现具体的到应用的通信，要这么写，并且要知道具体应用的端口号：
1:123456789(发送的随机时间，随便写):user:machine:32:hello
双方所用的协议一定要一致

UDP:用户数据包协议
UDP 在局域网中几乎不可能丢包

每次运行程序，都被分配一个新的端口，这是动态端口，每次都是不一样的，而且端口是不能重的，一旦端口被调用，那么程序就不能启动

UDP绑定信息
一个电脑是可以有多个无限网卡的,所以接收方的ip地址可以写'',接收方是一定要绑定信息的，否则别人给你发送信息，你是收不到的，不知道你的端口号是不行。

套接字可收可发，而且可以同时运行，是全双工的(UDP/TCP)
单工：广播，只能收不能听
半双工：对讲机，在同一时刻只能有一个人说或者听
全双工：电话，在同一时刻可说可听

socket中python编码问题
用.encode('utf-8')来解决这个问题，当然里面这个编码方式可以有很多，主要是和你接收程序的解码方式要一致
加个b和encode一样的效果
编码  encode
解码  decode

####
a = (111,222)
b,c = a
则a = 111，b = 222
上面b,c = a 相当于解包

## UDP通信过程
应用层   内容
传输层   端口号 内容
网络层   ip地址 端口号 内容
接口层   MAC地址 ip地址 端口号 内容

## echo 服务器
你给我发一个，我就会回一个

# 百度上传时在前端做了大量的压缩算法





















