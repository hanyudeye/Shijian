顺序表增加数据时一定是重新复制的，需要一个随时增加的列表，而不是总是复制？
线性表:
1.顺序表:将元素顺序地存放在一块连续的存储区里，元素减的顺序关系由他们的存储顺序自然表示
2.链表:将元素存放在通过链接构造起来的一系列存储块中

单项链表：
数据区+链接区
单链表操作:
is_empty()   链表是否为空
length()     链表长度
travel()     遍历整个链表
add(item)    链表头部添加元素
append(item) 链表尾部添加元素
insert(pos,item)   指定位置添加元素
remove()           删除节点
search()           查找节点是否存在

python中变量的本质是一个标识的地址，a,b = b,a，这种操作之所以可以是因为变量仅仅维护的一个地址，你给他赋值的过程就是改变其指向地址的过程，所以也可以
对函数进行赋值，把函数名字赋给一个变量也是可以的，这个变量只是维护一个指向函数的地址而已。
所以即便在python中没有地址的概念，但是它有一个next的属性，将这个next赋成下一个节点标识，就是相当于给了下一个节点的地址

_head     ---       链表
       cur(游标)

从链表头部添加元素
先把要添加元素的指针区指向原来首位元素的数据区，然后再把__head指向要添加元素的数据区
增删改查操作在数据结构这个层面上时一定要注意节点的连接
后继结点

链表和顺序表的对比
操作            链表          顺序表
访问元素         O(n)         O(1)
在头部插入/删除   O(1)         O(n)
在尾部插入/删除   O(n)         O(1)
在中间插入/删除   O(n)         O(n)
# 最后虽然时间复杂度是一样的，但是两者操作方式是不同的，链表是遍历，而顺序表是移动数据产生的时间复杂度

