* 有什么创意写下来
** TODO 看Linux的书，生活不就是为了好玩吗？ 不要愁眉苦脸，for FUN
** 恶心的异形
** 看创业论坛，或博客，可以有方向感
** 社交平台交友，看机会

- https://news.ycombinator.com/


* 有什么创意写下来

** TODO 看Linux的书，生活不就是为了好玩吗？ 不要愁眉苦脸，for FUN
** TODO 恶心的异形
** TODO 博客里每天添加一条资讯即可，资讯来源先采用 老郭种树         :不现实:
** 如何办一张国外的银行卡
** 如何结婚
* todo

**  安装 TTS ，在linux 系统                                           :done:

https://github.com/coqui-ai/TTS/tree/dev#installation

* 如何快速掌握阅读源代码的能力

 掌握阅读源代码的能力是一个逐步提升的过程，以下是一些方法和建议可以帮助你快速提高这方面的能力：

1. **选择合适的项目**: 选择一个你感兴趣的项目，最好是开源项目，这样你可以随时查看其源代码。选择一个规模适中、文档完善的项目会更容易入手。

2. **学习基本语法和约定**: 确保你对所使用的编程语言有基本的了解，包括语法、数据结构、面向对象编程等。熟悉常见的编码约定和命名规范也很重要，这有助于理解代码的结构和意图。

3. **阅读文档和注释**: 在阅读源代码之前，先阅读项目的文档和注释。文档和注释通常会提供关于项目结构、函数用途和参数等方面的重要信息，有助于你更好地理解源代码。

4. **使用调试器和工具**: 学会使用调试器和代码分析工具，这些工具可以帮助你跟踪代码的执行流程、查看变量的值和调用关系，从而更好地理解代码的运行过程。

5. **按模块阅读**: 将源代码分成模块，并逐个模块进行阅读。先从高层次的模块开始，逐渐深入到具体的函数和类实现。

6. **查阅相关资料**: 在阅读源代码的过程中，你可能会遇到一些不熟悉的概念或技术，这时可以查阅相关的资料，包括官方文档、教程、博客文章等，以帮助你理解源代码的含义和背后的原理。

7. **练习和实践**: 阅读源代码是一个需要不断练习和实践的过程。尝试阅读不同类型的项目和代码库，多写一些小的项目或者参与开源项目的贡献，这样可以帮助你不断提高阅读源代码的能力。

8. **与他人交流**: 和他人讨论和交流源代码的阅读经验和理解，可以帮助你发现不同的视角和思路，加深对代码的理解。

最重要的是保持耐心和持续学习，掌握阅读源代码的能力需要时间和积累，但随着你不断的努力和实践，你会逐渐提高这方面的技能。 

* 初学项目

  当你是初学者时，选择适合你水平的开源项目非常重要。以下是一些适合初学者的开源项目：

1. **TodoMVC**: TodoMVC 是一个展示如何使用不同 JavaScript 框架和库构建 Todo 应用程序的项目。你可以选择一个你感兴趣的框架或库，然后阅读其源代码，了解其基本结构和工作原理。

2. **First Contributions**: 这是一个旨在帮助初学者开始参与开源项目的项目。你可以通过提交简单的代码更改或修复文档错误来开始贡献，同时学习如何使用 Git 和 GitHub。

3. **SimpleCV**: SimpleCV 是一个用于计算机视觉和图像处理的 Python 库，它提供了简单易用的接口和功能。你可以通过阅读其源代码，了解图像处理算法和计算机视觉技术的实现细节。

4. **BeeWare**: BeeWare 是一个用 Python 构建跨平台应用程序的项目，它提供了一系列工具和库，包括 GUI 库、打包工具等。你可以选择其中一个工具或库，阅读其源代码，并尝试为其贡献代码。

5. **Hacktoberfest 指定的项目**: 每年举办的 Hacktoberfest 活动会有很多开源项目提供给初学者参与贡献的机会。你可以查看 Hacktoberfest 官方网站上列出的项目列表，并选择一个适合你技能水平的项目开始贡献。

以上这些项目都有着友好的社区和文档，同时代码库也相对简单，适合初学者阅读和参与贡献。选择一个你感兴趣的项目，并开始探索其中的源代码吧！


