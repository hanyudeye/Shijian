* 看创业论坛，或博客，可以有方向感
** 社交平台交友，看机会

- https://news.ycombinator.com/


* todo
- 安装 TTS ，在linux 系统
- 去掉 window的环境变量 https://zh-wave.com/2022/12/06/wsl-removing-windows-path.html
- 学习源码，并实现
-

* 实现软件
**  > 如何用python 实现 ls程序 

   要用Python实现类似Unix的`ls`命令，你需要使用Python的`os`模块来访问文件系统，并使用`os.listdir()`函数来获取指定目录下的文件列表。以下是一个简单的示例代码，实现了基本的`ls`功能：

```python
import os

def ls(directory="."):
    files = os.listdir(directory)
    for file in files:
        print(file)

if __name__ == "__main__":
    ls()
```

这个简单的程序将会列出当前工作目录下的所有文件和文件夹。你可以将要列出的目录作为参数传递给`ls()`函数，例如`ls("/path/to/directory")`，这样就会列出指定目录下的文件和文件夹。

如果你想要实现更多`ls`命令的功能，比如列出文件的详细信息（包括权限、所有者、大小等），你可能需要更复杂的实现，可以使用Python的其他模块，比如`stat`模块来获取文件的详细信息，并对其进行格式化输出。

** 实践
学习和实现软件源码可以是一项非常有价值的学习经历，特别是对于那些想要深入了解软件内部工作原理的人来说。以下是一些步骤，可以帮助你开始学习并实现软件源码：

1. **选择一个合适的项目**：选择一个你感兴趣的项目。这个项目应该不仅仅是开源的，而且也要符合你的技术水平和兴趣领域。GitHub上有很多热门的开源项目，你可以从那里开始搜索。

2. **阅读项目文档**：仔细阅读项目的文档，了解项目的目标、架构、核心功能和技术栈。这可以帮助你更好地理解项目的整体结构和工作原理。

3. **分析源代码**：从项目的核心部分开始，逐步阅读和分析源代码。了解每个模块、类和函数的功能和作用，以及它们之间的关系。

4. **运行和调试**：在理解了源代码的基础上，尝试在本地运行项目，并进行调试。这可以帮助你更直观地理解代码的执行流程和数据变化。

5. **尝试修改和实现**：一旦你对项目有了更深入的了解，就可以尝试修改现有的功能或者实现新的功能。这是一个很好的学习方法，可以帮助你巩固所学的知识，并提高自己的编程能力。

6. **查阅资料和求助**：在学习过程中，你可能会遇到一些困难和问题。不要害怕查阅相关的资料和文档，并向社区或者其他开发者求助。开源社区通常非常乐于帮助新手。

7. **持续学习和改进**：学习软件源码是一个持续的过程，不断地学习和实践是提高自己技术水平的关键。保持好奇心，不断地探索和尝试新的东西。

最重要的是，要有耐心和毅力。学习和实现软件源码可能会遇到挑战，但坚持下去，你将会收获丰富的知识和经验。
* 有什么创意写下来

** TODO 看Linux的书，生活不就是为了好玩吗？ 不要愁眉苦脸，for FUN
** TODO 恶心的异形
** TODO 博客里每天添加一条资讯即可，资讯来源先采用 老郭种树
** 如何办一张国外的银行卡
** 如何结婚
